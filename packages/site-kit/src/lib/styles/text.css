.language-diff :where(.inserted, .deleted) {
	position: relative;
}

.language-diff :where(.inserted) {
	color: var(--sk-code-diff-inserted);
}

.language-diff :where(.deleted) {
	color: var(--sk-code-diff-removed);
	user-select: none;
}

.language-diff :where(.inserted, .deleted)::before {
	position: absolute;
	left: -1ch;
}

.language-diff :where(.inserted)::before {
	content: '+';
}

.language-diff :where(.deleted)::before {
	content: '-';
}

/** make long comments wrap on mobile */
:where(.token.comment.wrapped) {
	display: block;
	white-space: pre-wrap;
	padding-left: calc(var(--indent) + 2ch);
	text-indent: calc(-1 * var(--indent) - 2ch);
	min-height: 1.35em;
}

.api-section {
	background: var(--sk-back-4);
	padding: 1rem;
	margin-bottom: 1rem;
	max-width: var(--sk-line-max-width);
	border-radius: var(--sk-border-radius);
}

.ts-block {
	margin: 1em 0;
	max-width: var(--sk-line-max-width);
	background: var(--sk-code-ts-bg);
	border-radius: var(--sk-border-radius);
	filter: drop-shadow(2px 2px 8px rgba(0, 0, 0, 0.08));
	overflow: hidden;
}

.ts-block > pre {
	--shiki-color-background: var(--sk-code-ts-bg);
	margin: 0;
	border-radius: 0;
	box-shadow: none;
	background: var(--sk-code-ts-bg);
}

.ts-block .ts-block-property p {
	margin: 1rem 0;
}

.ts-block-property pre {
	margin: 1rem 0;
}

.ts-block-property > pre {
	margin: 0;
	padding-left: 1rem;
	border-radius: 0;
	box-shadow: none;
	border-top: 1px solid var(--sk-back-4);
}

.ts-block-property-details {
	padding: 0 1rem 0 2rem;
}

.ts-block-property-details blockquote {
	margin: 1rem 0;
}

.ts-block-property-children {
	margin: 0rem -1rem 0rem 1rem;
}

.ts-block-property-bullets .tag {
	font-size: 1.4rem;
	text-transform: uppercase;
	color: #666;
}

.ts-block-property ul:last-child {
	margin-bottom: 0;
}
